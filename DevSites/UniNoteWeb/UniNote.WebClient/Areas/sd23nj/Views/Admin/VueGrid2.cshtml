@{
    Layout = "../Shared/_VueLayout.cshtml";
    ViewData["Title"] = "usermng";
}

@section css{
    <style type="text/css">
        [v-cloak] {
            display: none
        }

        table.tb_table {
            border: 1px solid #ccc;
            padding: 0;
            border-collapse: collapse;
            table-layout: fixed;
            margin-top: 10px;
            width: 100%;
        }

            table.tb_table td,
            table.tb_table th {
                height: 30px;
                border: 1px solid #ccc;
                background: #fff;
                font-size: 15px;
                padding: 3px 3px 3px 8px;
            }

                table th:first-child {
                    width: 30px;
                }

        .tb_container,
        .st {
            width: 1000px;
            margin: 10px auto 0;
            font-size: 13px;
            font-family: 'Microsoft YaHei'
        }

            .tb_container .search {
                font-size: 15px;
                padding: 4px;
            }

            .tb_container .add {
                padding: 5px 15px;
            }
            /*遮罩层*/
        .overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 6;
            background: rgba(0, 0, 0, 0.7);
        }

            .overlay td:first-child {
                width: 66px;
            }
            /*div剧中代码*/
            .overlay .con {
                position: absolute;
                width: 420px;
                min-height: 300px;
                background: #fff;
                left: 50%;
                top: 50%;
                -webkit-transform: translate3d(-50%, -50%, 0);
                transform: translate3d(-50%, -50%, 0);
                /*margin-top: -150px;*/
                padding: 20px;
            }
    </style>

    <style>
        * {
            margin: 0;
            padding: 0;
        }

        .vue-defualtpager {
            margin-top: 20px;
            margin-left: 20px;
        }

            .vue-defualtpager li {
                list-style: none;
            }

            .vue-defualtpager a {
                border: 1px solid #ddd;
                text-decoration: none;
                float: left;
                padding: 6px 12px;
                color: #337ab7;
                cursor: pointer
            }

                .vue-defualtpager a:hover {
                    background-color: #eee;
                }

                .vue-defualtpager a .banclick {
                    cursor: not-allowed;
                }

            .vue-defualtpager .active a {
                color: #fff;
                cursor: default;
                background-color: #337ab7;
                border-color: #337ab7;
            }

            .vue-defualtpager i {
                font-style: normal;
                color: #d44950;
                margin: 0px 4px;
                font-size: 12px;
            }

            .vue-defualtpager .jumpbox .jumppage {
                border: 1px solid #ddd;
                margin-left: 40px;
                height: 33px;
                width: 40px;
                float: left;
            }

            .vue-defualtpager .jumpbox .jumpbtn {
                cursor: pointer;
                margin-left: 10px;
            }

                .vue-defualtpager .jumpbox .jumpbtn:active {
                    color: #337ab7;
                }
    </style>
}
<div class="st">
    <h1>vue实现对数据的增删改查(CURD)</h1>
    
</div>
<div class="tb_container" id="app">
    <div>
        <input type="text" placeholder="search" @@input="search" list="cars" class="search">
        <datalist id="cars">
            <option v-for="item in searchlist" :value="item"></option>
        </datalist>
        <input type="button" class="add" @@click="add" value="新增">
    </div>
    <div>
        <table class="tb_table">
            <tr>
                <td><input type="checkbox" @@click="checkAll" v-model="totalBoxcChecked"></td>
                <th>id</th>
                <th>用户名</th>
                <th>邮箱</th>
                <th>性别</th>
                <th>省份</th>
                <th>爱好</th>
                <th>操作</th>
            </tr>
            <tr v-cloak v-for="(item, index) of slist">
                <td><input type="checkbox" v-model="checkedList" :value="item.id"></td>
                <td>{{item.id}}</td>
                <td>{{item.username}}</td>
                <td>{{item.email}}</td>
                <td>{{item.sex}}</td>
                <td>{{item.province}}</td>
                <td>{{item.hobby.join(' | ')}}</td>
                <td><a href="javascript:;" @@click="showOverlay(index)">修改</a> | <a href="javascript:;" @@click="del(index)">删除</a></td>
            </tr>
        </table>
    </div>
    <div id="page-break" class="vue-defualtpager">
        <ul>
            <li v-if="pageCurrent>1">
                <a v-on:click="pageCurrent--,pageClick()">上一页</a>
            </li>
            <li v-if="pageCurrent==1">
                <a class="banclick">上一页</a>
            </li>
            <li v-for="item in indexs" v-bind:class="{'active':pageCurrent==item}">
                <a v-on:click="btnClick(item), pageClick()">{{item}}</a>
            </li>
            <li v-if="pageCurrent!=pageAll">
                <a v-on:click="pageCurrent++,pageClick()">下一页</a>
            </li>
            <li v-if="pageCurrent==pageAll">
                <a class="banclick">下一页</a>
            </li>
            <li><a>共<i>{{pageAll}}</i>页</a></li>
            <li class="jumpbox">
                <input type="number" class="jumppage" />
                <a class="jumpbtn" v-on:click="pageSkip()">跳转</a>
            </li>
        </ul>
    </div>

    <model :list='selectedlist' :isactive="isActive" v-cloak v-on:change="changeOverlay" @@modify="modify"></model>
</div>



@section Scripts{

    <script type="text/x-template" id="modify_model">
        <div class="overlay" v-show="isactive">
            <div class="con">
                <h2 class="title">新增 | 修改</h2>
                <div class="content">
                    <table class="tb_table">
                        <tr>
                            <td>用户名</td>
                            <td><input type="text" v-model="modifylist.username"></td>
                        </tr>
                        <tr>
                            <td>邮箱</td>
                            <td><input type="text" v-model="modifylist.email"></td>
                        </tr>
                        <tr>
                            <td>性别</td>
                            <td>
                                <label><input type="radio" name="sex" value="男" v-model="modifylist.sex">男</label>
                                <label><input type="radio" name="sex" value="女" v-model="modifylist.sex">女</label>
                                <label><input type="radio" name="sex" value="未知" v-model="modifylist.sex">未知</label>
                            </td>
                        </tr>
                        <tr>
                            <td>省份</td>
                            <td>
                                <select name="" id="" v-model="modifylist.province">
                                    <option value="北京市">北京市</option>
                                    <option value="河北省">河北省</option>
                                    <option value="河南省">河南省</option>
                                    <option value="重庆市">重庆市</option>
                                    <option value="广东省">广东省</option>
                                    <option value="辽宁省">辽宁省</option>
                                </select>
                            </td>
                        </tr>
                        <tr>
                            <td>爱好</td>
                            <td>
                                <label><input type="checkbox" v-model="modifylist.hobby" value="篮球">篮球</label>
                                <label><input type="checkbox" v-model="modifylist.hobby" value="读书">读书</label>
                                <label><input type="checkbox" v-model="modifylist.hobby" value="插画">插画</label>
                                <label><input type="checkbox" v-model="modifylist.hobby" value="编程">编程</label>
                                <label><input type="checkbox" v-model="modifylist.hobby" value="弹琴">弹琴</label>
                            </td>
                        </tr>
                    </table>
                    <p>
                        <input type="button" @@click="changeActive" value="取消">
                        <input type="button" @@click="modify" value="保存">
                    </p>
                </div>
            </div>
        </div>
    </script>


    <script type="text/javascript">
        Vue.component('model', {
            props: ['list', 'isactive'],
            template: '#modify_model',
            //template: `<div> sdlkfsdf'
            //    </div>`,
            computed: {
                modifylist() {
                    return this.list;
                }
            },
            methods: {
                changeActive() {
                    this.$emit('change');
                },
                modify() {
                    this.$emit('modify', this.modifylist);
                }
            }
        });
        var app = new Vue({
            el: '#app',
            data: {
                isActive: false,
                selected: -1,
                selectedlist: {},
                slist: [],
                searchlist: [],
                pageCurrent: 1,
                pageAll: 20,
                totalBoxcChecked: false, //是否全选
                checkedList: [], //双向数据绑定的数组，我是用的id
                list: [
                    {
                        id: 0,
                        username: 'aaaaa',
                        email: '123@qq.com',
                        sex: '男',
                        province: '北京市',
                        hobby: ['篮球', '读书', '编程']
                    },
                    {
                        id: 1,
                        username: 'bbbbb',
                        email: 'bbbbbbb@163.com',
                        sex: '女',
                        province: '河北省',
                        hobby: ['弹琴', '读书', '插画']
                    },
                    {
                        id: 2,
                        username: 'aaabb',
                        email: 'abababab@qq.com',
                        sex: '女',
                        province: '重庆市',
                        hobby: ['篮球']
                    },
                    {
                        id: 3,
                        username: 'cccccc',
                        email: '123@qq.com',
                        sex: '男',
                        province: '北京市',
                        hobby: ['篮球', '读书', '编程']
                    },
                    {
                        id: 4,
                        username: 'dddddd',
                        email: 'bbbbbbb@163.com',
                        sex: '女',
                        province: '河北省',
                        hobby: ['弹琴', '读书', '插画']
                    },
                    {
                        id: 5,
                        username: 'eeeee',
                        email: 'abababab@qq.com',
                        sex: '女',
                        province: '重庆市',
                        hobby: ['篮球']
                    }
                ]
            },
            created() {
                this.setSlist(this.list);
            },
            computed: {
                indexs() {
                    var left = 1;
                    var right = this.pageAll;
                    var arr = [];
                    if (this.pageAll >= 7) {
                        if (this.pageCurrent > 4 && this.pageCurrent < this.pageAll - 3) {
                            left = this.pageCurrent - 3;
                            right = this.pageCurrent + 3;
                        } else if (this.pageCurrent <= 4) {
                            left = 1;
                            right = 7;
                        } else {
                            left = this.pageAll - 6;
                            right = this.pageAll;
                        }
                    }
                    while (left <= right) {
                        arr.push(left);
                        left++;
                    }
                    return arr;
                }
            },
            methods: {
                checkAll() {
                    if (this.totalBoxcChecked) {
                        this.checkedList = [];
                    } else {
                        this.list.forEach((item) => {
                            if (this.checkedList.indexOf(item.id) == -1) {
                                this.checkedList.push(item.id)
                            }
                        })
                    }
                },
                btnClick(num) {
                    if (num != this.pageCurrent) {
                        this.pageCurrent = num;
                    }
                },
                pageClick() {
                    console.log('现在是' + this.pageCurrent + '页')
                },
                pageSkip() {
                    var maxPage = this.pageAll;
                    var skipPage = Number(document.getElementsByClassName("jumppage")[0].value);
                    console.log(typeof skipPage);
                    if (!skipPage) {
                        alert("请输入跳转页码");
                        return;
                    } else if (skipPage < 1 || skipPage > maxPage) {
                        alert("您输入的页码超过页数范围了！");
                        return;
                    } else {
                        //this.pageCurrent=skipPage;
                        this.btnClick(skipPage);
                        this.pageClick();
                    }
                },

                // 修改数据
                showOverlay(index) {
                    this.selected = index;
                    this.selectedlist = this.list[index];
                    this.changeOverlay();
                },
                // 点击保存按钮
                modify(arr) {
                    if (this.selected > -1) {
                        Vue.set(this.list, this.selected, arr);
                        this.selected = -1;
                    } else {
                        this.list.push(arr);
                    }
                    this.setSlist(this.list);
                    this.changeOverlay();
                },
                add: function () {
                    this.selectedlist = {
                        username: '',
                        email: '',
                        sex: '男',
                        province: '北京市',
                        hobby: []
                    };
                    this.isActive = true;
                },
                // delete list in index location
                del(index) {
                    this.list.splice(index, 1);
                    this.setSlist(this.list);
                },
                changeOverlay() {
                    this.selected = -1;
                    this.isActive = !this.isActive;
                },
                // 获取需要渲染到页面中的数据
                setSlist(arr) {
                    this.slist = JSON.parse(JSON.stringify(arr));
                },
                // 搜索
                search(e) {
                    var v = e.target.value,
                        self = this;
                    self.searchlist = [];
                    if (v) {
                        var ss = [];
                        // 过滤需要的数据
                        this.list.forEach(function (item) {
                            if (item.username.indexOf(v) > -1) {
                                if (self.searchlist.indexOf(item.username) == -1) {
                                    self.searchlist.push(item.username);
                                }
                                ss.push(item);
                            } else if (item.email.indexOf(v) > -1) {
                                if (self.searchlist.indexOf(item.email) == -1) {
                                    self.searchlist.push(item.email);
                                }
                                ss.push(item);
                            }
                        });
                        this.setSlist(ss); // 将过滤后的数据给了slist
                    } else {
                        // 没有搜索内容，则展示全部数据
                        this.setSlist(this.list);
                    }
                }
            },
            watch: {
                pageCurrent: function (newValue, oldValue) {
                    console.log(arguments);
                },
                checkedList() {
                    if (this.checkedList.length == this.list.length) {
                        this.totalBoxcChecked = true;
                    } else {
                        this.totalBoxcChecked = false;
                    }
                }
            }
        })
    </script>
}