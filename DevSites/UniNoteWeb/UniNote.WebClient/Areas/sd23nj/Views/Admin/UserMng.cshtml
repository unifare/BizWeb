@{
    Layout = "../Shared/_AdminBaseLayout.cshtml";
    ViewData["Title"] = "usermng";
}

<table class="layui-hide" id="test" lay-filter="test"></table>
<script type="text/html" id="toolbarDemo">
    <div class="layui-btn-container">
        <button class="layui-btn layui-btn-sm" lay-event="getCheckData">获取选中行数据</button>
        <button class="layui-btn layui-btn-sm" lay-event="getCheckLength">获取选中数目</button>
        <button class="layui-btn layui-btn-sm" lay-event="isAll">验证是否全选</button>
    </div>
</script>

<script type="text/html" id="barDemo">
    <a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
    <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
</script>
@section Scripts{

    <script>
        var table;
        ; !function () {
            var layer = layui.layer
                , form = layui.form;

            table = layui.table;

            //table.render({
            //  elem: '#test'
            //  ,url:'/api/Fact/GetAllTrigers'
            //  ,cellMinWidth: 80 //全局定义常规单元格的最小宽度，layui 2.2.1 新增
            //  ,cols: [[
            //    {field:'Id', width:80, title: 'ID', sort: true}
            //    ,{field:'RuleName', width:80, title: '规则名称'}
            //    ,{field:'Rule', width:80, title: '规则', sort: true}
            //    ,{field:'HttpMethod', width:80, title: '获取方式'}

            //    ,{field:'AddTime', title: '添加时间'}
            //  ]]
            //});
        }();
    </script>

    <script>
        function GetAllTrigers() {
            $.ajax({
                type: "get",
                url: "/api/UserMng/GetAllUserFromServer",
                dataType: "json",
                //data: urlData,
                async: true,
                success: function (jsonResult) {
                    table.render({
                        elem: '#test'
                        , page: true
                        , toolbar: '#toolbarDemo' //开启头部工具栏，并为其绑定左侧模板
                        , defaultToolbar: ['filter', 'exports', 'print', { //自定义头部工具栏右侧图标。如无需自定义，去除该参数即可
                            title: '提示'
                            , layEvent: 'LAYTABLE_TIPS'
                            , icon: 'layui-icon-tips'
                        }]
                        , title: '用户数据表'
                        , data: jsonResult
                        , cellMinWidth: 80 //全局定义常规单元格的最小宽度，layui 2.2.1 新增
                        , cols: [[
                            { type: 'checkbox', fixed: 'left' }
                            , { field: 'id', title: 'ID', sort: true }
                            , { field: 'userName', width: 150, title: '用户', sort: true }
                            , {
                                field: 'email', width: 180, title: '邮箱', edit: 'text', templet: function (res) {
                                    return '<em>' + res.email + '</em>'
                                }
                            }
                            , { field: 'name', width: 180, title: '姓名', edit: 'text' }
                            , { field: 'phoneNumber', width: 100, title: '手机号', edit: 'text' }
                            , { field: 'lockoutEnd', title: '登出时间' }
                            , { fixed: 'right', title: '操作', toolbar: '#barDemo', width: 150 }
                        ]]
                    });


                    //头工具栏事件
                    table.on('toolbar(test)', function (obj) {
                        var checkStatus = table.checkStatus(obj.config.id);
                        switch (obj.event) {
                            case 'getCheckData':
                                var data = checkStatus.data;
                                layer.alert(JSON.stringify(data));
                                break;
                            case 'getCheckLength':
                                var data = checkStatus.data;
                                layer.msg('选中了：' + data.length + ' 个');
                                break;
                            case 'isAll':
                                layer.msg(checkStatus.isAll ? '全选' : '未全选');
                                break;

                            //自定义头工具栏右侧图标 - 提示
                            case 'LAYTABLE_TIPS':
                                layer.alert('这是工具栏右侧自定义的一个图标按钮');
                                break;
                        };
                    });
                    //监听行工具事件
                    table.on('tool(test)', function (obj) {
                        var data = obj.data;
                        //console.log(obj)
                        if (obj.event === 'del') {
                            layer.confirm('真的删除行么', function (index) {
                                $.ajax({
                                    type: "Post",
                                    url: "/api/UserMng/DelUserFromServer?id="+obj.data.id,
                                    dataType: "json",
                                    //data: urlData,
                                    async: true,
                                    success: function (jsonResult) {
                                            obj.del();//
                                    },
                                    error: function (e) {
                                         layer.msg('删除出错');
                                        console.log(e);
                                    }
                                });
                            
                                layer.close(index);
                            });
                        } else if (obj.event === 'edit') {

                            layer.prompt({
                                formType: 2,
                                value: data
                            }, function (value, index) {
                                obj.update({
                                    email: value
                                });
                                layer.close(index);
                            });
                        }
                    });
                },
                error: function (e) {
                    console.log(e);
                }
            });
        }

        $(function () {
            GetAllTrigers();
        })
    </script>
}